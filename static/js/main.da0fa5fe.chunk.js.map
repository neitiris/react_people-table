{"version":3,"sources":["api/api.js","components/People.js","components/PeopleTable.js","App.js","index.js"],"names":["getPeople","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","people","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","stop","apply","this","arguments","classNames","require","People","props","_props$personData","personData","name","age","sex","century","children","id","died","born","mother","father","handler","selectedPerson","personRowClass","defineProperty","person PeopleTable__row","PeopleTable__row--selected","person--female","person--male","green_border-style","person--mother","undefined","person--father","personClassNameStyle","born-before-1650","died-after-1800","react_default","createElement","key","className","onClick","map","child","defaultProps","PeopleTable","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","sortData","sortCase","length","setState","state","direction","sortedPeopleList","toConsumableArray","peopleData","sort","b","localeCompare","bind","assertThisInitialized","_this2","setTimeout","inputValue","_this3","inputCase","type","onePersonData","components_People","React","Component","App","then","person","index","objectSpread","Math","ceil","filter","src_components_PeopleTable","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.da0fa5fe.chunk.js","sourcesContent":["const baseUrl = 'https://mate-academy.github.io';\n\nconst getPeople = async() => {\n  const url = '/react_people-table/api/people.json';\n  const response = await fetch(`${baseUrl}${url}`);\n  const people = await response.json();\n\n  return people;\n};\n\nexport default getPeople;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nconst classNames = require('classnames');\n\nfunction People(props) {\n  const {\n    name, age, sex, century, children,\n    id, died, born, mother, father,\n  } = props.personData;\n  const { handler, selectedPerson } = props;\n  const personRowClass = classNames({\n    'person PeopleTable__row': true,\n    'PeopleTable__row--selected': id === selectedPerson,\n    'person--female': sex === 'f',\n    'person--male': sex === 'm',\n    'green_border-style': age > 65,\n    'person--mother': children !== undefined && sex === 'f',\n    'person--father': children !== undefined && sex === 'm',\n    [`person--lived-in-${century}`]: true,\n  });\n  const personClassNameStyle = classNames({\n    'born-before-1650': born < 1650,\n    'died-after-1800': died > 1800,\n  });\n\n  return (\n    <tr\n      key={`user_${id}`}\n      className={personRowClass}\n      onClick={() => {\n        handler(id);\n      }}\n    >\n      <td key={`user_${id}_id`} className=\"centered\">{id}</td>\n      <td key={`user_${id}_name`} className={personClassNameStyle}>{name}</td>\n      <td key={`user_${id}_sex`} className=\"centered\">{sex}</td>\n      <td key={`user_${id}_born`}>{born}</td>\n      <td key={`user_${id}_died`}>{died}</td>\n      <td key={`user_${id}_age`}>{age}</td>\n      <td key={`user_${id}_century`} className=\"centered\">{century}</td>\n      <td key={`user_${id}_mother`}>{mother}</td>\n      <td key={`user_${id}_father`}>{father}</td>\n      <td key={`user_${id}_children`}>\n        {children !== undefined\n          ? children.map(child => `${child.name},`) : ''\n        }\n      </td>\n    </tr>\n  );\n}\n\nPeople.propTypes = {\n  personData: propTypes.shape({}).isRequired,\n  handler: propTypes.func.isRequired,\n  selectedPerson: propTypes.number,\n};\nPeople.defaultProps = {\n  selectedPerson: null,\n};\n\nexport default People;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport './PeopleTable.scss';\nimport People from './People';\n\nclass PeopleTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedPerson: null,\n      sortedPeopleList: this.props.peopleData,\n    };\n    this.handler = this.handler.bind(this);\n  }\n\n  componentDidMount() {\n    setTimeout(() => this.sortData(), 70);\n  }\n\n  sortData = (sortCase = 'id') => {\n    this.setState(state => ({\n      direction: state.direction === 1 ? -1 : 1,\n      sortedPeopleList:\n        [...this.props.peopleData]\n          .sort((a, b) => (sortCase === 'name'\n            ? state.direction * a[sortCase].localeCompare(b[sortCase])\n            : state.direction * (b[sortCase] - a[sortCase]))),\n    }));\n  };\n\n  handler(inputValue) {\n    this.setState({\n      selectedPerson: inputValue,\n    });\n  }\n\n  render() {\n    const sortCases = ['id', 'name', 'sex', 'born', 'died', 'age'];\n\n    return (\n      <table className=\"PeopleTable\" key=\"table\">\n        <thead key=\"tHead\">\n          <tr key=\"head_row\" className=\"table-head--row\">\n            {sortCases.map(inputCase => (\n              inputCase === 'sex'\n                ? (<td key={`tHead${inputCase}`}>{inputCase}</td>)\n                : (\n                  <td key={`tHead${inputCase}`}>\n                    <button\n                      type=\"button\"\n                      onClick={() => this.sortData(inputCase)}\n                    >\n                      {inputCase}\n                    </button>\n                  </td>\n                )))}\n            <td key=\"tHead_century\">century</td>\n            <td key=\"tHead_mother\">mother</td>\n            <td key=\"tHead_father\">father</td>\n            <td key=\"tHead_children\">children</td>\n          </tr>\n        </thead>\n        <tbody key=\"tBody\">\n          {\n            this.state.sortedPeopleList\n              .map(onePersonData => (\n                <People\n                  key={`People_${onePersonData.id}`}\n                  personData={onePersonData}\n                  handler={this.handler}\n                  selectedPerson={this.state.selectedPerson}\n                />\n              ))\n          }\n        </tbody>\n      </table>\n    );\n  }\n}\n\nPeopleTable.propTypes = {\n  peopleData: propTypes.arrayOf(propTypes.object).isRequired,\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport './App.css';\nimport getPeople from './api/api';\nimport PeopleTable from './components/PeopleTable';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      people: [],\n    };\n  }\n\n  async componentDidMount() {\n    await getPeople()\n      .then((peopleData) => {\n        this.setState(\n          {\n            people: [...peopleData].map((person, index) => ({\n              id: index + 1,\n              ...person,\n              age: person.died - person.born,\n              century: Math.ceil(person.died / 100),\n              children: person.sex === 'm'\n                ? [...peopleData].filter(child => child.father === person.name)\n                : [...peopleData].filter(child => child.mother === person.name),\n            })),\n          },\n        );\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <PeopleTable peopleData={this.state.people} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}