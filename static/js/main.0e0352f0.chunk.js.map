{"version":3,"sources":["api/api.js","components/PeopleTable.js","components/NewPerson.js","App.js","index.js"],"names":["getPeople","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","people","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","map","person","index","objectSpread","id","age","died","born","century","Math","ceil","children","sex","filter","child","father","name","mother","stop","apply","this","arguments","propTypes","shape","string","number","personRowClass","selected","result","undefined","personClassNameStyle","PeopleTable","state","selectedPerson","sortedPeopleList","_this","props","peopleData","sortData","sortCase","setState","direction","toConsumableArray","sort","b","localeCompare","setTimeout","_this2","_this3","react_default","createElement","className","type","onClick","onePersonData","key","React","Component","NewPerson","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","changeHandler","event","target","value","formControls","defineProperty","handleSubmit","_this$state$formContr","onSubmit","htmlFor","onChange","App","then","src_components_PeopleTable","src_components_NewPerson","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.0e0352f0.chunk.js","sourcesContent":["import propTypes from 'prop-types';\n\nconst baseUrl = 'https://mate-academy.github.io';\n\nconst getPeople = async() => {\n  const url = '/react_people-table/api/people.json';\n  const response = await fetch(`${baseUrl}${url}`);\n  const people = await response.json();\n\n  return people.map((person, index) => ({\n    id: index + 1,\n    ...person,\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n    children: person.sex === 'm'\n      ? people.filter(child => child.father === person.name)\n      : people.filter(child => child.mother === person.name),\n  }));\n};\n\ngetPeople.propTypes = {\n  person: propTypes.shape({\n    father: propTypes.string,\n    mother: propTypes.string,\n    sex: propTypes.string,\n    died: propTypes.number,\n    born: propTypes.number,\n  }),\n};\n\nexport default getPeople;\n","import React from 'react';\nimport propTypes from 'prop-types';\n// import People from './People';\nimport './PeopleTable.scss';\n\nconst personRowClass = (age, sex, century, children, id, selected) => {\n  let result = `person PeopleTable__row`\n  + `${id === selected ? ' PeopleTable__row--selected' : ''}`;\n\n  result += sex === 'f' ? ' person--female' : ' person--male';\n  result += age > 65 ? ' green_border' : '';\n  result += ` person--lived-in-${century}`;\n  result += children !== undefined && (\n    sex === 'f'\n      ? ' person--mother'\n      : ' person--father'\n  );\n\n  return result;\n};\n\nconst personClassNameStyle = (died, born) => {\n  let result = '';\n\n  if (born < 1650) {\n    result += ' born-before-1650';\n  }\n\n  if (died > 1800) {\n    result += ' died-after-1800';\n  }\n\n  return result;\n};\n\nclass PeopleTable extends React.Component {\n  state = {\n    selectedPerson: null,\n    sortedPeopleList: this.props.peopleData,\n  };\n\n  async componentDidMount() {\n    setTimeout(() => this.sortData('id'), 70);\n  }\n\n  sortData = (sortCase) => {\n    this.setState(state => ({\n      direction: state.direction === 1 ? -1 : 1,\n      sortedPeopleList: [...this.props.peopleData].sort((a, b) => {\n        switch (sortCase) {\n          case 'id':\n            return state.direction * (b[sortCase] - a[sortCase]);\n          case 'age':\n            return state.direction * (b[sortCase] - a[sortCase]);\n          case 'born':\n            return state.direction * (b[sortCase] - a[sortCase]);\n          case 'died':\n            return state.direction * (b[sortCase] - a[sortCase]);\n          case 'name':\n            return state.direction * a[sortCase].localeCompare(b[sortCase]);\n          default: return 0;\n        }\n      }),\n    }));\n  };\n\n  render() {\n    const { selectedPerson } = this.state;\n\n    return (\n      <table className=\"PeopleTable\">\n        <thead>\n          <tr className=\"table-head\">\n            <td>\n              <button\n                type=\"button\"\n                onClick={() => this.sortData('id')}\n              >\n                id\n              </button>\n            </td>\n            <td>\n              <button\n                type=\"button\"\n                onClick={() => this.sortData('name')}\n              >\n                name\n              </button>\n            </td>\n            <td>sex</td>\n            <td>\n              <button\n                type=\"button\"\n                onClick={() => this.sortData('born')}\n              >\n                born\n              </button>\n            </td>\n            <td>\n              <button\n                type=\"button\"\n                onClick={() => this.sortData('died')}\n              >\n                died\n              </button>\n            </td>\n            <td>\n              <button\n                type=\"button\"\n                onClick={() => this.sortData('age')}\n              >\n                age\n              </button>\n            </td>\n            <td>century</td>\n            <td>mother</td>\n            <td>father</td>\n            <td>children</td>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            this.state.sortedPeopleList\n              .map(onePersonData => (\n                <tr\n                  className={\n                    personRowClass(\n                      onePersonData.age,\n                      onePersonData.sex,\n                      onePersonData.century,\n                      onePersonData.children,\n                      onePersonData.id,\n                      selectedPerson,\n                    )\n                  }\n                  onClick={() => {\n                    this.setState({\n                      selectedPerson: onePersonData.id,\n                    });\n                  }}\n                  key={onePersonData.id}\n                >\n                  <td className=\"centered-column\">{onePersonData.id}</td>\n                  <td className={\n                    personClassNameStyle(onePersonData.died,\n                      onePersonData.born)}\n                  >\n                    {onePersonData.name}\n                  </td>\n                  <td className=\"centered-column\">{onePersonData.sex}</td>\n                  <td>{onePersonData.born}</td>\n                  <td>{onePersonData.died}</td>\n                  <td>{onePersonData.age}</td>\n                  <td className=\"centered-column\">{onePersonData.century}</td>\n                  <td>{onePersonData.mother}</td>\n                  <td>{onePersonData.father}</td>\n                  <td>\n                    {\n                      onePersonData.children !== undefined\n                        ? onePersonData\n                          .children.map(child => `${child.name},`) : ''\n                    }\n                  </td>\n                </tr>\n              ))\n          }\n        </tbody>\n      </table>\n    );\n  }\n}\n\nPeopleTable.propTypes = {\n  peopleData: propTypes.arrayOf(propTypes.object).isRequired,\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport './NewPerson.scss';\n\nclass NewPerson extends React.Component { // Not working yet\n  constructor(props) {\n    super(props);\n    this.state = {\n      formControls: {\n\n      },\n\n    };\n  }\n\n  changeHandler = (event) => {\n    const { name } = event.target;\n    const { value } = event.target;\n\n    this.setState({\n      formControls: { [name]: value },\n    });\n  };\n\n  handleSubmit = (event) => {\n    // const form = event.target;\n\n    // event.preventDefault();\n    // this.props.onSubmit({\n    //   name: form.element.name.value,\n    //   sex: form.element.sex.value,\n    //   born: form.element.born.value,\n    //   died: form.element.died.value,\n    //   mother: form.element.mother.value,\n    //   father: form.element.father.value,\n    // });\n  };\n\n  render() {\n    const {\n      name,\n      sex,\n      born,\n      died,\n      mother,\n      father,\n    } = this.state.formControls;\n\n    return (\n      <form className=\"newUser_form\" onSubmit={this.handleSubmit}>\n        <label htmlFor=\"name\">\n          Name\n          <br />\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.changeHandler}\n          />\n        </label>\n        <label htmlFor=\"sex\">\n          <input\n            type=\"radio\"\n            name=\"sex\"\n            value={sex}\n            onChange={this.changeHandler}\n          />\n          Male\n          <input\n            type=\"radio\"\n            name=\"sex\"\n            value={sex}\n            onChange={this.changeHandler}\n          />\n          Female\n        </label>\n        <label htmlFor=\"born\">\n          Born\n          <br />\n          <input\n            type=\"number\"\n            name=\"born\"\n            value={born}\n            onChange={this.changeHandler}\n          />\n        </label>\n        <label htmlFor=\"died\">\n          Died\n          <br />\n          <input\n            type=\"number\"\n            name=\"died\"\n            value={died}\n            onChange={this.changeHandler}\n          />\n        </label>\n        <label htmlFor=\"mother\">\n          Mother\n          <br />\n          <input\n            type=\"text\"\n            name=\"mother\"\n            value={mother}\n            onChange={this.changeHandler}\n          />\n        </label>\n        <label htmlFor=\"father\">\n          Father\n          <br />\n          <input\n            type=\"text\"\n            name=\"father\"\n            value={father}\n            onChange={this.changeHandler}\n          />\n        </label>\n        <button type=\"submit\" className=\"submitNewPerson\">Create</button>\n      </form>\n    );\n  }\n}\n\nexport default NewPerson;\n","import React from 'react';\nimport './App.css';\nimport getPeople from './api/api';\nimport PeopleTable from './components/PeopleTable';\nimport NewPerson from './components/NewPerson';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      people: [],\n    };\n  }\n\n  async componentDidMount() {\n    await getPeople()\n      .then((peopleData) => {\n        this.setState(\n          { people: [...peopleData] },\n        );\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <PeopleTable peopleData={this.state.people} />\n        <NewPerson />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}